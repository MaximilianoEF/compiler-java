package lex;

/**
 * Automaton: concentra la MATRIZ DE ESTADOS (δ) y la MATRIZ DE FUNCIONES (acciones f1..f7)
 * en el mismo orden de columnas que declaramos:
 *
 * columnas = [ letra, entero, {, }, (, ), ;, -, +, /, *, <, >, !, =, WS, EOF ]
 */
final class Automaton {
  private Automaton(){}

  // === clases de caracteres (índices de columnas) ===
  static final int C_LET=0, C_DIG=1, C_LB=2, C_RB=3, C_LP=4, C_RP=5, C_SEMI=6,
                   C_MINUS=7, C_PLUS=8, C_SLASH=9, C_STAR=10, C_LT=11, C_GT=12,
                   C_NOT=13, C_EQ=14, C_WS=15, C_EOF=16;

  static final int DEAD = -1;

  // === δ: MATRIZ DE ESTADOS (q) ===
  static final int[][] DELTA = {
    /*q */ //  L   D  {   }   (   )   ;   -   +   /   *   <   >   !   =   WS  EOF
    /*0*/   { 1,  2, 13, 14, 11, 12, 15,  6,  5,  8,  7,  3,  3,  3,  3,  0,  0},
    /*1*/   { 1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*2*/   {-1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*3*/   {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4, -1, -1},
    /*4*/   {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*5*/   {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6, -1, -1},
    /*6*/   {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*7*/   {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8, -1, -1},
    /*8*/   {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*9*/   {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1},
    /*10*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*11*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*12*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*13*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*14*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1},
    /*15*/  {15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 15, 15, 15, -1, -1},
    /*16*/  {15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 15, 15, 15, 15, 15, -1, -1},
    /*17*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*18*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*19*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*20*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    /*21*/  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
  };

  // === matriz de FUNCIONES (acción por transición) ===
  // f1=create_var, f2=add_char, f3=create_int, f4=add_num, f5=finish_var, f6=finish_int, f7=do_nothing
  static final int F_CREATE_VAR=1, F_ADD_CHAR=2, F_CREATE_INT=3, F_ADD_NUM=4, F_FINISH_VAR=5, F_FINISH_INT=6, F_NOTHING=7;

  static final int[][] ACTION = {
    //     L   D   {   }   (   )   ;   -   +   /   *   <   >   !   =   WS  EOF
    /*0*/{  1,  3,  7,  7,  7,  7,  7, 12, 11, 14, 13,  7,  8,  5,  7,  0,  0},
    /*1*/{  2,  2,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5},
    /*2*/{  6,  4,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6},
    /*3*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  4,  7,  7},
    /*4*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
    /*5*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  6,  7,  7},
    /*6*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
    /*7*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,  7,  7},
    /*8*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
    /*9*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7, 10,  7,  7},
   /*10*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*11*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*12*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*13*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*14*/{  7,  7,  7,  7,  7,  7,  7,  7,  7, 15,  7,  7,  7,  7,  7,  7,  7},
   /*15*/{ 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 15, 15, 15,  7,  7},
   /*16*/{ 15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 15, 15, 15, 15, 15,  7,  7},
   /*17*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*18*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*19*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*20*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7},
   /*21*/{  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7}
  };
}

